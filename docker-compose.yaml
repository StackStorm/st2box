api:
  image: stackstorm/st2api
  links:
    - mongo
    - rabbitmq
    - mistral-api
  volumes_from:
    - data

auth:
  image: stackstorm/st2auth
  links:
    - api
    - mongo
  volumes:
    - ./auth/htpasswd:/etc/st2/htpasswd:ro
  volumes_from:
    - data

notifier:
  image: stackstorm/st2notifier
  links:
    - api
    - mongo
    - rabbitmq
  volumes_from:
    - data

resultstracker:
  image: stackstorm/st2resultstracker
  links:
    - api
    - mongo
    - rabbitmq
    - mistral-api
  volumes_from:
    - data

rulesengine:
  image: stackstorm/st2rulesengine
  links:
    - api
    - mongo
    - rabbitmq
  volumes_from:
    - data

sensorcontainer:
  image: stackstorm/st2sensorcontainer
  links:
    - api
    - mongo
    - rabbitmq
  volumes_from:
    - data

actionrunner:
  build: ./actionrunner #[inline]
  links:
    - api
    - mongo
    - rabbitmq
    - web
    - mistral-api
  volumes_from:
    - data
  environment:
    ST2_ACTION_API_URL: https://web/api
    ST2_ACTION_AUTH_URL: https://web/auth

web:
  build: ./web
  links:
    - api
    - auth
  ports:
    - 80:80
    - 443:443

client:
  build: ./client
  links:
    - api
    - auth

chatops:
  build: ./chatops
  links:
    - web
  environment:
    ST2_HOSTNAME: web
    ST2_AUTH_USERNAME: admin
    ST2_AUTH_PASSWORD: 123
    HUBOT_ADAPTER: slack
    HUBOT_SLACK_TOKEN: xoxb-change-me

## Mistral Services

mistral-api:
  build: ./mistral
  environment:
    MISTRAL_SERVICE: api
  links:
    - postgres
    - rabbitmq

mistral-engine:
  build: ./mistral
  environment:
    MISTRAL_SERVICE: engine
  links:
    - postgres
    - rabbitmq

mistral-executor:
  build: ./mistral
  environment:
    MISTRAL_SERVICE: executor
  links:
    - rabbitmq
    - api

## External Services
mongo:
  image: mongo:3.2

rabbitmq:
  image: rabbitmq

postgres:
  image: postgres
  environment:
    - POSTGRES_USER=mistral
    - POSTGRES_PASSWORD=StackStorm

## Data container
data:
  build: ./data
  volumes:
    - /etc/st2
    - /opt/stackstorm
  links:
    - rabbitmq
    - mongo
